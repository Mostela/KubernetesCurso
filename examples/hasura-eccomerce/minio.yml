---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-hasura
  namespace: production
  labels:
    app: hasura-minio
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 15Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/files/minio"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: static
              operator: In
              values:
                - "yes"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-hasura-claim
  namespace: production
  labels:
    app: hasura-minio
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
kind: Secret
apiVersion: v1
metadata:
  name: secret-minio
  namespace: production
  labels:
    app: hasura-minio
data:
  minio_user: bWluaW8=
  minio_pass: bWluaW8xMjM=
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: production
  name: minio-hasura
  labels:
    app: hasura-minio
spec:
  minReadySeconds: 20
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: hasura-minio
  template:
    metadata:
      name: minio-hasura
      labels:
        app: hasura-minio
      namespace: production
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: static
                    operator: In
                    values:
                      - "yes"
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-hasura-claim
      containers:
        - name: minio
          image: minio/minio
          command: ["/bin/minio"]
          args: ["server","/data", "--console-address", ":9001"]
          envFrom:
            - secretRef:
                name: secret-minio
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  key: minio_user
                  name: secret-minio
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: minio_pass
                  name: secret-minio
          ports:
            - containerPort: 9000
              name: api
            - containerPort: 9001
              name: http
          volumeMounts:
            - mountPath: /data
              name: minio-storage
          livenessProbe:
            httpGet:
              port: 9000
              path: minio/health/live
            failureThreshold: 3
            timeoutSeconds: 20
            initialDelaySeconds: 40
---
apiVersion: v1
kind: Service
metadata:
  name: minio-hasura
  labels:
    app: hasura-minio
  namespace: production
spec:
  type: LoadBalancer
  ports:
    - port: 9000
      targetPort: api
  selector:
    app: hasura-minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio-hasura
  labels:
    app: hasura-minio
  namespace: production
spec:
  type: NodePort
  ports:
    - port: 9001
      targetPort: http
  selector:
    app: hasura-minio